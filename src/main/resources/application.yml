spring:
  shardingsphere:
    datasource:
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name:  com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/coursedb?serverTimezone=GMT%2B8
        username: root
        password: lxy1qaz!QAZ
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/coursedb2?erverTimezone=GMT%2B8
        username: root
        password: lxy1qaz!QAZ

    sharding:
      tables:
        course:
          actual-data-nodes: m$->{1..2}.course_$->{1..2}
          key-generator:
            column: cid
            type: SNOWFLAKE
            props:
              worker:
                id: 1
          table-strategy:
#            inline:
#              sharding-column: cid
#              algorithm-expression: course_$->{cid%2+1}
            standard:
              sharding-column: cid
              range-algorithm-class-name: com.lxy.algorithm.MyRangeTableShardingAlgorithm
              precise-algorithm-class-name: com.lxy.algorithm.MyPreciseTableShardingAlgorithm
          database-strategy:
#            inline:
#              sharding-column: cid
#              algorithm-expression: m$->{cid%2+1}
            standard:
              sharding-column: cid
              range-algorithm-class-name: com.lxy.algorithm.MyRangeDSShardingAlgorithm
              precise-algorithm-class-name: com.lxy.algorithm.MyPreciseDSShardingAlgorithm

    props:
      sql:
        show: true
  main:
    allow-bean-definition-overriding: true